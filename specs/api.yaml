openapi: 3.0.1
info:
  title: CryptoMarket
  description: 'CryptoMarket - учебный проект курса "Backend разработка на Kotlin"'
  license:
    name: MIT open source license
    url: https://github.com/otuskotlin/202105-otuskotlin-marketplace/blob/main/LICENSE
  version: 0.0.1
servers:
  - url: https://localhost/
tags:
  - name: or
    description: CRUDS для ордеров

paths:
  /or/create:
    post:
      tags:
        - or
      summary: Создать новую заявку (ордер)
      operationId: orCreate
      requestBody:
        description: Объект запроса для создания новой заявки
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrCreateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrCreateResponse'
  /or/read:
    post:
      tags:
        - or
      summary: Получить информацию о заявке
      operationId: orRead
      requestBody:
        description: Объект запроса для получения информации о заявке
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrReadRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrReadResponse'
  /or/update:
    post:
      tags:
        - or
      summary: Обновить заявку
      operationId: orUpdate
      requestBody:
        description: Объект запроса для обновления заявки
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrUpdateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrUpdateResponse'
  /or/delete:
    post:
      tags:
        - or
      summary: Удалить заявку
      operationId: orDelete
      requestBody:
        description: Объект запроса для удаления заявки
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrDeleteRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrDeleteResponse'
  /or/search:
    post:
      tags:
        - or
      summary: Поиск заявок
      operationId: orSearch
      requestBody:
        description: Объект запроса для поиска заявок
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrSearchRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrSearchResponse'
components:
  schemas:
    OrRequestDebugMode:
      type: string
      enum:
        - prod
        - test
        - stub

    IRequest:
      type: object
      description: Базовый интерфейс для всех запросов
      properties:
        requestType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
      discriminator:
        propertyName: requestType
        mapping:
          create: '#/components/schemas/OrCreateRequest'
          read:   '#/components/schemas/OrReadRequest'
          update: '#/components/schemas/OrUpdateRequest'
          delete: '#/components/schemas/OrDeleteRequest'
          search: '#/components/schemas/OrSearchRequest'

    Error:
      type: object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    ResponseResult:
      type: string
      enum:
        - success
        - error

    IResponse:
      type: object
      description: Базовый интерфейс для всех ответов
      properties:
        responseType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
        result:
          $ref: '#/components/schemas/ResponseResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'

      discriminator:
        propertyName: responseType
        mapping:
          create: '#/components/schemas/OrCreateResponse'
          read:   '#/components/schemas/OrReadResponse'
          update: '#/components/schemas/OrUpdateResponse'
          delete: '#/components/schemas/OrDeleteResponse'
          search: '#/components/schemas/OrSearchResponse'

    BaseOrUpdateable:
      type: object
      description: Объект описывает свойства, одинаковые для create и update
      properties:
        walletNumber:
          type: string
        fiatCurrency:
          $ref: '#/components/schemas/FiatCurrency'
        cryptoCurrency:
          $ref: '#/components/schemas/CryptoCurrency'
        action:
          $ref: '#/components/schemas/Action'

    BaseOrIdRequest:
      type: object
      properties:
        or:
          type: object
          properties:
            id:
              type: string

    OrCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/OrRequestDebug'
        - type: object
          properties:
            or:
              $ref: '#/components/schemas/OrCreateObject'

    OrReadRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/BaseOrIdRequest'
        - $ref: '#/components/schemas/OrRequestDebug'

    OrCreateObject:
      allOf:
        - $ref: '#/components/schemas/BaseOrUpdateable'

    OrUpdateObject:
      allOf:
        - $ref: '#/components/schemas/BaseOrUpdateable'
        - type: object
          properties:
            id:
              type: string

    OrUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/OrRequestDebug'
        - type: object
          properties:
            or:
              $ref: '#/components/schemas/OrUpdateObject'

    OrDeleteRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/BaseOrIdRequest'
        - $ref: '#/components/schemas/OrRequestDebug'

    OrSearchFilter:
      type: object
      description: Набор фильтров для поиска
      properties:
        searchString:
          type: string
          description: Поисковая строка, которая будет искаться в заявках

    OrSearchRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/OrRequestDebug'
        - type: object
          properties:
            orFileter:
              $ref: '#/components/schemas/OrSearchFilter'

    OrPermissions:
      type: string
      description: Доступы для клиента для операций над заявками
      enum:
        - read
        - update
        - delete

    OrResponseObject:
      allOf:
        - $ref: '#/components/schemas/BaseOrUpdateable'
        - type: object
          description: Объект, который возвращается в ответе бэкенда
          properties:
            id:
              type: string
            ownerId:
              type: string
            permissions:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/OrPermissions'

    OrResponseSingle:
      allOf:
        - type: object
          description: Ответ с одним объектом заявки
          properties:
            or:
              $ref: '#/components/schemas/OrResponseObject'

    OrCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/OrResponseSingle'

    OrReadResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/OrResponseSingle'

    OrUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/OrResponseSingle'

    OrDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/OrResponseSingle'

    OrSearchResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - type: object
          description: Список найденных объектов
          properties:
            ors:
              type: array
              items:
                $ref: '#/components/schemas/OrResponseObject'

    # STUBS ======================
    OrRequestDebug:
      type: object
      properties:
        debug:
          $ref: '#/components/schemas/OrDebug'

    OrDebug:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/OrRequestDebugMode'
        stub:
          $ref: '#/components/schemas/OrRequestDebugStubs'

    OrRequestDebugStubs:
      type: string
      description: Перечисления всех стабов
      enum:
        - success
        - notFound
        - badId
        - badwallet
        - badCryptoCurrency
        - badFiatCurrency
        - cannotDelete
        - badSearchString

    FiatCurrency:
      description: Модель фиатной валюты
      type: string
      enum:
        - RUR
    CryptoCurrency:
      description: Модель криптовалюты
      type: string
      enum:
        - BTC
    Action:
      description: Действия
      type: string
      enum:
        - BUY
        - SELL